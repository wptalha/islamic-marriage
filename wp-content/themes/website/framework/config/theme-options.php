<?php defined( 'ABSPATH' ) OR die( 'This script cannot be accessed directly.' );

/**
 * Theme's options
 *
 * @filter us_config_theme-options
 */

global $us_template_directory_uri;
return array(
	'generalsettings' => array(
		'title' => __( 'General Settings', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/settings.png',
		'fields' => array(
			'preloader' => array(
				'title' => __( 'Preloader Screen', 'us' ),
				'type' => 'select',
				'options' => array(
					'disabled' => __( 'Disabled', 'us' ),
					'1' => sprintf( __( 'Shows Preloader %d', 'us' ), 1 ),
					'2' => sprintf( __( 'Shows Preloader %d', 'us' ), 2 ),
					'3' => sprintf( __( 'Shows Preloader %d', 'us' ), 3 ),
					'4' => sprintf( __( 'Shows Preloader %d', 'us' ), 4 ),
					'5' => sprintf( __( 'Shows Preloader %d', 'us' ), 5 ),
				),
				'std' => 'disabled',
			),
			'page_sidebar' => array(
				'title' => __( 'Sidebar at Regular Pages', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'none',
			),
			'page_comments' => array(
				'title' => __( 'Page Comments', 'us' ),
				'type' => 'switch',
				'text' => __( 'Enable comments for all regular pages', 'us' ),
				'std' => 0,
			),
			'generate_css_file' => array(
				'title' => __( 'Theme Options CSS File', 'us' ),
				'type' => 'switch',
				'text' => __( 'Store Theme Options generated styles in a separate CSS file', 'us' ),
				'std' => 0,
			),
			'og_enabled' => array(
				'title' => __( 'Open Graph Data', 'us' ),
				'type' => 'switch',
				'text' => __( 'Create meta-data for social sharings and other Open Graph usages', 'us' ),
				'std' => 1,
			),
			/*'og_posts_as_articles' => array(
				'title' => __( 'Represent Posts as Open Graph Articles', 'us' ),
				'type' => 'switch',
				'text' => __( 'Provide special meta data about author, published time and more', 'us' ),
				'std' => 1,
				'show_if' => array( 'enable_og', '=', TRUE ),
			),*/
			'enable_unsupported_vc_shortcodes' => array(
				'title' => __( 'Unsupported Features of Visual Composer', 'us' ),
				'type' => 'switch',
				'text' => __( 'Enable theme-disabled VC\'s shortcodes and features', 'us' ),
				'std' => 0,
				'place_if' => class_exists( 'Vc_Manager' ),
			),
			'enable_unsupported_vc_shortcodes_info' => array(
				'description' => __( '<strong>Note</strong>: Enabling the theme-disabled VC\'s shortcodes and features will reduce your website load speed and performance. Also some of the theme-disabled shortcodes could be not fully supported by the theme and/or not styled properly.', 'us' ),
				'type' => 'message',
				'classes' => 'color_blue for_above',
				'place_if' => class_exists( 'Vc_Manager' ),
				'show_if' => array( 'enable_unsupported_vc_shortcodes', '=', TRUE ),
			),
			'custom_html' => array(
				'title' => __( 'Custom HTML Code', 'us' ),
				'description' => __( 'Paste your custom code here, it will be added into the footer section of your site. You can use JS code with &lt;script&gt;&lt;/script&gt; tags. Also you can add Google Analytics or other tracking code into this field.', 'us' ),
				'type' => 'html',
				'classes' => 'title_top desc_2',
			),
		),
	),
	'logooptions' => array(
		'title' => __( 'Logo Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/logo.png',
		'fields' => array(
			'logo_type' => array(
				'title' => __( 'Logo Type', 'us' ),
				'type' => 'imgradio',
				'options' => array(
					'text' => 'framework/admin/img/logo-text.png',
					'img' => 'framework/admin/img/logo-img.png',
				),
				'std' => 'text',
			),
			'logo_text' => array(
				'title' => __( 'Logo Text', 'us' ),
				'description' => __( 'Add text which will be shown as logo. Better keep it short.', 'us' ),
				'type' => 'text',
				'std' => 'LOGO',
				'show_if' => array( 'logo_type', '=', 'text' ),
			),
			'logo_font_size' => array(
				'title' => __( 'Logo Text Size', 'us' ),
				'type' => 'slider',
				'min' => 12,
				'max' => 60,
				'std' => 27,
				'postfix' => 'px',
				'show_if' => array( 'logo_type', '=', 'text' ),
			),
			'logo_font_size_tablets' => array(
				'title' => __( 'Logo Text Size for Tablets', 'us' ),
				'description' => __( 'This option is enabled when screen width is less than 900px', 'us' ),
				'type' => 'slider',
				'min' => 12,
				'max' => 60,
				'std' => 24,
				'postfix' => 'px',
				'show_if' => array( 'logo_type', '=', 'text' ),
			),
			'logo_font_size_mobiles' => array(
				'title' => __( 'Logo Text Size for Mobiles', 'us' ),
				'description' => __( 'This option is enabled when screen width is less than 600px', 'us' ),
				'type' => 'slider',
				'min' => 12,
				'max' => 60,
				'std' => 20,
				'postfix' => 'px',
				'show_if' => array( 'logo_type', '=', 'text' ),
			),
			'logo_image' => array(
				'title' => __( 'Logo Image', 'us' ),
				'description' => __( 'Maximum recommended size is 300px of height (also for retina displays)', 'us' ),
				'type' => 'upload',
				'extension' => 'png,jpg,jpeg,gif,svg',
				'show_if' => array( 'logo_type', '=', 'img' ),
			),
			'logo_height' => array(
				'title' => __( 'Logo Height', 'us' ),
				'type' => 'slider',
				'min' => 20,
				'max' => 300,
				'std' => 60,
				'postfix' => 'px',
				'show_if' => array(
					array( 'logo_type', '=', 'img' ),
					'and',
					array( 'header_layout', '!=', 'sided' ),
				),
			),
			'logo_height_sticky' => array(
				'title' => __( 'Logo Height in the Sticky Header', 'us' ),
				'type' => 'slider',
				'min' => 20,
				'max' => 300,
				'std' => 60,
				'postfix' => 'px',
				'show_if' => array(
					array( 'logo_type', '=', 'img' ),
					'and',
					array( 'header_layout', '!=', 'sided' ),
				),
			),
			'logo_width' => array(
				'title' => __( 'Logo Width', 'us' ),
				'type' => 'slider',
				'min' => 100,
				'max' => 400,
				'std' => 200,
				'postfix' => 'px',
				'show_if' => array(
					array( 'logo_type', '=', 'img' ),
					'and',
					array( 'header_layout', '=', 'sided' ),
				),
			),
			'logo_height_tablets' => array(
				'title' => __( 'Logo Height for Tablets', 'us' ),
				'description' => __( 'This option is enabled when screen width is less than 900px', 'us' ),
				'type' => 'slider',
				'min' => 20,
				'max' => 80,
				'std' => 40,
				'postfix' => 'px',
				'show_if' => array( 'logo_type', '=', 'img' ),
			),
			'logo_height_mobiles' => array(
				'title' => __( 'Logo Height for Mobiles', 'us' ),
				'description' => __( 'This option is enabled when screen width is less than 600px', 'us' ),
				'type' => 'slider',
				'min' => 20,
				'max' => 50,
				'std' => 30,
				'postfix' => 'px',
				'show_if' => array( 'logo_type', '=', 'img' ),
			),
			'logo_additional_images' => array(
				'title' => __( 'Additional Logo Images (optional)', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
				'show_if' => array( 'logo_type', '=', 'img' ),
			),
			'logo_image_transparent' => array(
				'title' => __( 'For Transparent Header', 'us' ),
				'description' => __( 'This image will be shown instead of default when the header is transparent', 'us' ),
				'type' => 'upload',
				'extension' => 'png,jpg,jpeg,gif,svg',
				'show_if' => array( 'logo_type', '=', 'img' ),
			),
			'logo_image_tablets' => array(
				'title' => __( 'For Tablets', 'us' ),
				'description' => __( 'This image will be shown instead of default when screen width is less than 900px', 'us' ),
				'type' => 'upload',
				'extension' => 'png,jpg,jpeg,gif,svg',
				'show_if' => array( 'logo_type', '=', 'img' ),
			),
			'logo_image_mobiles' => array(
				'title' => __( 'For Mobiles', 'us' ),
				'description' => __( 'This image will be shown instead of default when screen width is less than 600px', 'us' ),
				'type' => 'upload',
				'extension' => 'png,jpg,jpeg,gif,svg',
				'show_if' => array( 'logo_type', '=', 'img' ),
			),
		),
	),
	'layoutoptions' => array(
		'title' => __( 'Layout Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/layout.png',
		'fields' => array(
			'responsive_layout' => array(
				'title' => __( 'Responsive Layout', 'us' ),
				'type' => 'switch',
				'text' => __( 'Enable responsive layout', 'us' ),
				'std' => 1,
			),
			'canvas_layout' => array(
				'title' => __( 'Site Canvas Layout', 'us' ),
				'type' => 'imgradio',
				'options' => array(
					'wide' => 'framework/admin/img/canvas-wide.png',
					'boxed' => 'framework/admin/img/canvas-boxed.png',
				),
				'std' => 'wide',
			),
			'color_body_bg' => array(
				'type' => 'color',
				'title' => __( 'Body Background Color', 'us' ),
				'std' => '#eeeeee',
				'show_if' => array( 'canvas_layout', '=', 'boxed' ),
			),
			'body_bg_image' => array(
				'title' => __( 'Body Background Image', 'us' ),
				'type' => 'upload',
				'show_if' => array( 'canvas_layout', '=', 'boxed' ),
			),
			'wrapper_body_bg_start' => array(
				'type' => 'wrapper_start',
				'show_if' => array(
					array( 'canvas_layout', '=', 'boxed' ),
					'and',
					array( 'body_bg_image', '!=', '' ),
				),
			),
			'body_bg_image_repeat' => array(
				'title' => __( 'Background Image repeat', 'us' ),
				'type' => 'select',
				'options' => array(
					'repeat' => __( 'Repeat', 'us' ),
					'repeat-x' => __( 'Repeat Horizontally', 'us' ),
					'repeat-y' => __( 'Repeat Vertically', 'us' ),
					'no-repeat' => __( 'Do Not Repeat', 'us' ),
				),
				'std' => 'repeat',
				'classes' => 'cols_2_first title_top',
			),
			'body_bg_image_position' => array(
				'title' => __( 'Background Image position', 'us' ),
				'type' => 'select',
				'options' => array(
					'top left' => __( 'Top Left', 'us' ),
					'top center' => __( 'Top Center', 'us' ),
					'top right' => __( 'Top Right', 'us' ),
					'center left' => __( 'Center Left', 'us' ),
					'center center' => __( 'Center Center', 'us' ),
					'center right' => __( 'Center Right', 'us' ),
					'bottom left' => __( 'Bottom Left', 'us' ),
					'bottom center' => __( 'Bottom Center', 'us' ),
					'bottom right' => __( 'Bottom Right', 'us' ),
				),
				'std' => 'top_center',
				'classes' => 'cols_2_last title_top',
			),
			'body_bg_image_attachment' => array(
				'title' => __( 'Background Image attachment', 'us' ),
				'type' => 'select',
				'options' => array(
					'scroll' => __( 'Scroll', 'us' ),
					'fixed' => __( 'Fixed', 'us' ),
				),
				'std' => 'scroll',
				'classes' => 'cols_2_first title_top',
			),
			'body_bg_image_size' => array(
				'title' => __( 'Background Image size', 'us' ),
				'type' => 'select',
				'options' => array(
					'cover' => __( 'Cover - Image will cover the whole browser viewport', 'us' ),
					'contain' => __( 'Contain - Image will fit inside the browser viewport', 'us' ),
					'initial' => __( 'Initial size', 'us' ),
				),
				'std' => 'cover',
				'classes' => 'cols_2_last title_top',
			),
			'wrapper_body_bg_end' => array(
				'type' => 'wrapper_end',
			),
			'site_canvas_width' => array(
				'title' => __( 'Site Canvas Width', 'us' ),
				'type' => 'slider',
				'min' => 1000,
				'max' => 1500,
				'step' => 10,
				'std' => 1300,
				'postfix' => 'px',
				'show_if' => array( 'canvas_layout', '=', 'boxed' ),
			),
			'site_content_width' => array(
				'title' => __( 'Site Content Width', 'us' ),
				'type' => 'slider',
				'min' => 900,
				'max' => 1300,
				'step' => 10,
				'std' => 1140,
				'postfix' => 'px',
			),
			'sidebar_width' => array(
				'title' => __( 'Sidebar Width', 'us' ),
				'description' => __( 'This option is applied for pages with sidebar only', 'us' ),
				'type' => 'slider',
				'min' => 20,
				'max' => 50,
				'std' => 25,
				'postfix' => '%',
			),
			'content_width' => array(
				'title' => __( 'Content Width', 'us' ),
				'description' => __( 'This option is applied for pages with sidebar only', 'us' ),
				'type' => 'slider',
				'min' => 50,
				'max' => 80,
				'std' => 68,
				'postfix' => '%',
			),
			'columns_stacking_width' => array(
				'title' => __( 'Columns Stacking Width', 'us' ),
				'description' => __( 'When screen width is less than this value, all columns within a row will become a single column.', 'us' ),
				'type' => 'slider',
				'min' => 300,
				'max' => 1024,
				'std' => 767,
				'postfix' => 'px',
			),
			'disable_effects_width' => array(
				'title' => __( 'Effects Disabling Width', 'us' ),
				'description' => __( 'When screen width is less than this value, vertical parallax and animation of elements appearance will be disabled.', 'us' ),
				'type' => 'slider',
				'min' => 300,
				'max' => 1024,
				'std' => 900,
				'postfix' => 'px',
			),
		),
	),
	'styling' => array(
		'title' => __( 'Styling', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/style.png',
		'fields' => array(
			'color_style' => array(
				'title' => __( 'Predefined Color Style', 'us' ),
				'type' => 'style_scheme',
			),
			'change_header_colors' => array(
				'title' => __( 'Custom Color Style', 'us' ),
				'type' => 'switch',
				'text' => __( 'Change <strong>Header</strong> colors', 'us' ),
				'std' => 0,
			),
			'color_header_bg' => array(
				'type' => 'color',
				'text' => __( 'Header Background Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_text' => array(
				'type' => 'color',
				'text' => __( 'Header Text Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_text_hover' => array(
				'type' => 'color',
				'text' => __( 'Header Text Hover Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_ext_bg' => array(
				'type' => 'color',
				'text' => __( 'Extended Header Background Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_ext_text' => array(
				'type' => 'color',
				'text' => __( 'Extended Header Text Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_ext_text_hover' => array(
				'type' => 'color',
				'text' => __( 'Extended Header Text Hover Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_transparent_text' => array(
				'type' => 'color',
				'text' => __( 'Transparent Header Text Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_transparent_text_hover' => array(
				'type' => 'color',
				'text' => __( 'Transparent Header Hover Text Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_search_bg' => array(
				'type' => 'color',
				'text' => __( 'Search Form Background Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'color_header_search_text' => array(
				'type' => 'color',
				'text' => __( 'Search Form Text Color', 'us' ),
				'show_if' => array( 'change_header_colors', '=', TRUE ),
			),
			'change_menu_colors' => array(
				'type' => 'switch',
				'text' => __( 'Change <strong>Main Menu</strong> colors', 'us' ),
				'std' => 0,
			),
			'color_menu_transparent_active_text' => array(
				'type' => 'color',
				'text' => __( 'Transparent Menu Active Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_active_bg' => array(
				'type' => 'color',
				'text' => __( 'Menu Active Background Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_active_text' => array(
				'type' => 'color',
				'text' => __( 'Menu Active Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_hover_bg' => array(
				'type' => 'color',
				'text' => __( 'Menu Hover Background Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_hover_text' => array(
				'type' => 'color',
				'text' => __( 'Menu Hover Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_drop_bg' => array(
				'type' => 'color',
				'text' => __( 'Dropdown Background Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_drop_text' => array(
				'type' => 'color',
				'text' => __( 'Dropdown Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_drop_hover_bg' => array(
				'type' => 'color',
				'text' => __( 'Dropdown Hover Background Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_drop_hover_text' => array(
				'type' => 'color',
				'text' => __( 'Dropdown Hover Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_drop_active_bg' => array(
				'type' => 'color',
				'text' => __( 'Dropdown Active Background Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_drop_active_text' => array(
				'type' => 'color',
				'text' => __( 'Dropdown Active Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_button_bg' => array(
				'type' => 'color',
				'text' => __( 'Menu Button Background Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_button_text' => array(
				'type' => 'color',
				'text' => __( 'Menu Button Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_button_hover_bg' => array(
				'type' => 'color',
				'text' => __( 'Menu Button Hover Background Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'color_menu_button_hover_text' => array(
				'type' => 'color',
				'text' => __( 'Menu Button Hover Text Color', 'us' ),
				'show_if' => array( 'change_menu_colors', '=', TRUE ),
			),
			'change_content_colors' => array(
				'type' => 'switch',
				'text' => __( 'Change <strong>Content</strong> colors', 'us' ),
				'std' => 0,
			),
			'color_content_bg' => array(
				'type' => 'color',
				'text' => __( 'Background Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'color_content_bg_alt' => array(
				'type' => 'color',
				'text' => __( 'Alternate Background Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'color_content_border' => array(
				'type' => 'color',
				'text' => __( 'Border Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'color_content_heading' => array(
				'type' => 'color',
				'text' => __( 'Heading Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'color_content_text' => array(
				'type' => 'color',
				'text' => __( 'Text Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'color_content_primary' => array(
				'type' => 'color',
				'text' => __( 'Primary Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'color_content_secondary' => array(
				'type' => 'color',
				'text' => __( 'Secondary Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'color_content_faded' => array(
				'type' => 'color',
				'text' => __( 'Faded Elements Color', 'us' ),
				'show_if' => array( 'change_content_colors', '=', TRUE ),
			),
			'change_subfooter_colors' => array(
				'type' => 'switch',
				'text' => __( 'Change <strong>SubFooter</strong> colors', 'us' ),
				'std' => 0,
			),
			'color_subfooter_bg' => array(
				'type' => 'color',
				'text' => __( 'Background Color', 'us' ),
				'show_if' => array( 'change_subfooter_colors', '=', TRUE ),
			),
			'color_subfooter_bg_alt' => array(
				'type' => 'color',
				'text' => __( 'Alternate Background Color', 'us' ),
				'show_if' => array( 'change_subfooter_colors', '=', TRUE ),
			),
			'color_subfooter_border' => array(
				'type' => 'color',
				'text' => __( 'Border Color', 'us' ),
				'show_if' => array( 'change_subfooter_colors', '=', TRUE ),
			),
			'color_subfooter_heading' => array(
				'type' => 'color',
				'text' => __( 'Heading Color', 'us' ),
				'show_if' => array( 'change_subfooter_colors', '=', TRUE ),
			),
			'color_subfooter_text' => array(
				'type' => 'color',
				'text' => __( 'Text Color', 'us' ),
				'show_if' => array( 'change_subfooter_colors', '=', TRUE ),
			),
			'color_subfooter_link' => array(
				'type' => 'color',
				'text' => __( 'Link Color', 'us' ),
				'show_if' => array( 'change_subfooter_colors', '=', TRUE ),
			),
			'color_subfooter_link_hover' => array(
				'type' => 'color',
				'text' => __( 'Link Hover Color', 'us' ),
				'show_if' => array( 'change_subfooter_colors', '=', TRUE ),
			),
			'change_footer_colors' => array(
				'type' => 'switch',
				'text' => __( 'Change <strong>Footer</strong> colors', 'us' ),
				'std' => 0,
			),
			'color_footer_bg' => array(
				'type' => 'color',
				'text' => __( 'Background Color', 'us' ),
				'show_if' => array( 'change_footer_colors', '=', TRUE ),
			),
			'color_footer_text' => array(
				'type' => 'color',
				'text' => __( 'Text Color', 'us' ),
				'show_if' => array( 'change_footer_colors', '=', TRUE ),
			),
			'color_footer_link' => array(
				'type' => 'color',
				'text' => __( 'Link Color', 'us' ),
				'show_if' => array( 'change_footer_colors', '=', TRUE ),
			),
			'color_footer_link_hover' => array(
				'type' => 'color',
				'text' => __( 'Link Hover Color', 'us' ),
				'show_if' => array( 'change_footer_colors', '=', TRUE ),
			),
			'custom_css' => array(
				'title' => __( 'Quick CSS', 'us' ),
				'type' => 'css',
				'classes' => 'title_top desc_1',
			),
		),
	),
	'headeroptions' => array(
		'title' => __( 'Header Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/header.png',
		'fields' => array(
			'header_options_layout' => array(
				'title' => __( 'Header Layout', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'header_layout' => array(
				'type' => 'imgradio',
				'options' => array(
					'standard' => 'framework/admin/img/header1.png',
					'extended' => 'framework/admin/img/header2.png',
					'advanced' => 'framework/admin/img/header3.png',
					'centered' => 'framework/admin/img/header4.png',
					'sided' => 'framework/admin/img/header5.png',
				),
				'std' => 'standard',
				'classes' => 'title_top',
			),
			'header_transparent' => array(
				'title' => __( 'Transparent Header', 'us' ),
				'type' => 'switch',
				'text' => __( 'Make the header transparent at its initial position by default', 'us' ),
				'std' => 0,
			),
			'header_sticky' => array(
				'title' => __( 'Sticky Header', 'us' ),
				'type' => 'switch',
				'text' => __( 'Fix the header at the top of a page during scroll by default', 'us' ),
				'std' => 1,
			),
			'wrapper_header_options_start' => array(
				'type' => 'wrapper_start',
				'show_if' => array( 'header_sticky', '=', TRUE ),
			),
			'header_sticky_disable_width' => array(
				'title' => __( 'Sticky Header Disabling Width', 'us' ),
				'description' => __( 'When screen width is less than this value, sticky header becomes non-sticky.', 'us' ),
				'type' => 'slider',
				'min' => 300,
				'max' => 1200,
				'std' => 900,
				'postfix' => 'px',
			),
			'header_hidden' => array(
				'title' => __( 'Hidden Header', 'us' ),
				'type' => 'switch',
				'text' => __( 'Hide the sticky header at its initial position by default', 'us' ),
				'std' => 0,
				'show_if' => array( 'header_layout', '!=', 'sided' ),
			),
			'wrapper_header_options_end' => array(
				'type' => 'wrapper_end',
			),
			'header_info' => array(
				'description' => __( '<strong>Transparent</strong>, <strong>Sticky</strong> and <strong>Hidden</strong> options can be set for a separate certain page when editing it. If the options above has no effect for some page, check its Header Options.', 'us' ),
				'type' => 'message',
				'classes' => 'color_blue title_top',
			),
			'header_fullwidth' => array(
				'title' => __( 'Fullwidth Header', 'us' ),
				'type' => 'switch',
				'text' => __( 'Stretch header content to the screen width', 'us' ),
				'std' => 0,
				'show_if' => array( 'header_layout', '!=', 'sided' ),
			),
			'header_invert_logo_pos' => array(
				'title' => __( 'Inverted Logo Position', 'us' ),
				'type' => 'switch',
				'text' => __( 'Place Logo to the right side of the Header', 'us' ),
				'std' => 0,
				'show_if' => array( 'header_layout', 'in', array( 'standard', 'extended', 'advanced' ) ),
			),
			'header_main_height' => array(
				'title' => __( 'Main header area height', 'us' ),
				'type' => 'slider',
				'min' => 50,
				'max' => 300,
				'std' => 100,
				'postfix' => 'px',
				'show_if' => array( 'header_layout', '!=', 'sided' ),
			),
			'header_main_sticky_height_1' => array(
				'title' => __( 'Sticky Main header area height', 'us' ),
				'type' => 'slider',
				'min' => 50,
				'max' => 300,
				'std' => 50,
				'postfix' => 'px',
				'show_if' => array(
					array( 'header_sticky', '=', TRUE ),
					'and',
					array( 'header_layout', 'in', array( 'standard', 'extended' ) ),
				),
			),
			'header_main_sticky_height_2' => array(
				'title' => __( 'Sticky Main header area height', 'us' ),
				'type' => 'slider',
				'min' => 0,
				'max' => 300,
				'std' => 50,
				'postfix' => 'px',
				'show_if' => array(
					array( 'header_sticky', '=', TRUE ),
					'and',
					array( 'header_layout', 'in', array( 'advanced', 'centered' ) ),
				),
			),
			'header_extra_height' => array(
				'title' => __( 'Extra header area height', 'us' ),
				'type' => 'slider',
				'min' => 36,
				'max' => 60,
				'std' => 40,
				'postfix' => 'px',
				'show_if' => array( 'header_layout', 'in', array( 'extended', 'advanced', 'centered' ) ),
			),
			'header_extra_sticky_height_1' => array(
				'title' => __( 'Sticky Extra header area height', 'us' ),
				'type' => 'slider',
				'min' => 0,
				'max' => 60,
				'std' => 0,
				'postfix' => 'px',
				'show_if' => array(
					array( 'header_sticky', '=', TRUE ),
					'and',
					array( 'header_layout', '=', 'extended' ),
				),
			),
			'header_extra_sticky_height_2' => array(
				'title' => __( 'Sticky Extra header area height', 'us' ),
				'type' => 'slider',
				'min' => 36,
				'max' => 60,
				'std' => 40,
				'postfix' => 'px',
				'show_if' => array(
					array( 'header_sticky', '=', TRUE ),
					'and',
					array( 'header_layout', 'in', array( 'advanced', 'centered' ) ),
				),
			),
			'header_main_width' => array(
				'title' => __( 'Header Width', 'us' ),
				'type' => 'slider',
				'min' => 200,
				'max' => 400,
				'std' => 300,
				'postfix' => 'px',
				'show_if' => array( 'header_layout', '=', 'sided' ),
			),
			'header_scroll_breakpoint' => array(
				'title' => __( 'Header Scroll Breakpoint', 'us' ),
				'description' => __( 'This option sets scroll distance from the top of a page after which the header will be shrunk if it\'s sticky, becomes visible if it\'s hidden, and becomes solid if it\'s transparent.', 'us' ),
				'type' => 'slider',
				'min' => 1,
				'max' => 200,
				'std' => 100,
				'postfix' => 'px',
				'show_if' => array(
					array( 'header_sticky', '=', TRUE ),
					'and',
					array( 'header_layout', '!=', 'sided' ),
				),
			),
			'header_options_elements' => array(
				'title' => __( 'Header Elements', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'header_search_show' => array(
				'type' => 'switch',
				'text' => __( 'Show <strong>Search Widget</strong> in the Header', 'us' ),
				'std' => 1,
				'classes' => 'title_top',
			),
			'wrapper_search_start' => array(
				'type' => 'wrapper_start',
				'show_if' => array( 'header_search_show', '=', TRUE ),
			),
			'header_search_layout' => array(
				'title' => __( 'Search Layout', 'us' ),
				'type' => 'select',
				'options' => array(
					'simple' => __( 'Simple', 'us' ),
					'modern' => __( 'Modern', 'us' ),
					'fullwidth' => __( 'Full Width', 'us' ),
					'fullscreen' => __( 'Full Screen', 'us' ),
				),
				'std' => 'fullscreen',
			),
			'wrapper_search_end' => array(
				'type' => 'wrapper_end',
			),
			'header_contacts_show' => array(
				'type' => 'switch',
				'text' => __( 'Show <strong>Contacts Widget</strong> in the Header', 'us' ),
				'std' => 0,
				'show_if' => array( 'header_layout', 'not in', array( 'standard', 'centered' ) ),
				'classes' => 'title_top',
			),
			'wrapper_contacts_start' => array(
				'type' => 'wrapper_start',
				'show_if' => array(
					array( 'header_layout', 'not in', array( 'standard', 'centered' ) ),
					'and',
					array( 'header_contacts_show', '=', TRUE ),
				),
			),
			'header_contacts_phone' => array(
				'title' => __( 'Phone Number', 'us' ),
				'type' => 'text',
				'classes' => 'cols_2_first title_top',
			),
			'header_contacts_email' => array(
				'title' => __( 'Email', 'us' ),
				'type' => 'text',
				'classes' => 'cols_2_last title_top',
			),
			'header_contacts_custom_icon' => array(
				'title' => __( 'Custom Icon', 'us' ),
				'description' => sprintf( __( '<a href="%s" target="_blank">FontAwesome</a> or <a href="%s" target="_blank">Material Design</a> icon', 'us' ), 'http://fontawesome.io/icons/', 'http://designjockey.github.io/material-design-fonticons/' ),
				'type' => 'text',
				'std' => '',
				'classes' => 'cols_2_first title_top desc_1',
			),
			'header_contacts_custom_text' => array(
				'title' => __( 'Custom Text', 'us' ),
				'description' => __( 'Use can use HTML tags in this field (e.g. &lt;a href=""&gt;&lt;/a&gt; for adding links)', 'us' ),
				'type' => 'text',
				'classes' => 'cols_2_last title_top desc_1',
			),
			'wrapper_contacts_end' => array(
				'type' => 'wrapper_end',
			),
			'header_socials_show' => array(
				'type' => 'switch',
				'text' => __( 'Show <strong>Social Links</strong> in the Header', 'us' ),
				'std' => 0,
				'show_if' => array( 'header_layout', 'not in', array( 'standard', 'centered' ) ),
				'classes' => 'title_top',
			),
			'wrapper_socials_start' => array(
				'type' => 'wrapper_start',
				'show_if' => array(
					array( 'header_layout', 'not in', array( 'standard', 'centered' ) ),
					'and',
					array( 'header_socials_show', '=', TRUE ),
				),
			),
			'header_socials_facebook' => array(
				'title' => 'Facebook',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_twitter' => array(
				'title' => 'Twitter',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_google' => array(
				'title' => 'Google+',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_linkedin' => array(
				'title' => 'LinkedIn',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_youtube' => array(
				'title' => 'YouTube',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_vimeo' => array(
				'title' => 'Vimeo',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_flickr' => array(
				'title' => 'Flickr',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_instagram' => array(
				'title' => 'Instagram',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_behance' => array(
				'title' => 'Behance',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_xing' => array(
				'title' => 'Xing',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_pinterest' => array(
				'title' => 'Pinterest',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_skype' => array(
				'title' => 'Skype',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_tumblr' => array(
				'title' => 'Tumblr',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_dribbble' => array(
				'title' => 'Dribbble',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_vk' => array(
				'title' => 'Vkontakte',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_soundcloud' => array(
				'title' => 'SoundCloud',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_yelp' => array(
				'title' => 'Yelp',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_twitch' => array(
				'title' => 'Twitch',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_deviantart' => array(
				'title' => 'DeviantArt',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_foursquare' => array(
				'title' => 'Foursquare',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_github' => array(
				'title' => 'GitHub',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_odnoklassniki' => array(
				'title' => 'Odnoklassniki',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_s500px' => array(
				'title' => '500px',
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'header_socials_houzz' => array(
				'title' => 'Houzz',
				'type' => 'text',
				'classes' => 'cols_3_last title_top',
			),
			'header_socials_rss' => array(
				'title' => 'RSS',
				'type' => 'text',
				'classes' => 'cols_3_first title_top',
			),
			'header_socials_custom_icon' => array(
				'title' => __( 'Custom Item Icon', 'us' ),
				'description' => sprintf( __( '<a href="%s" target="_blank">FontAwesome</a> or <a href="%s" target="_blank">Material Design</a> icon', 'us' ), 'http://fontawesome.io/icons/', 'http://designjockey.github.io/material-design-fonticons/' ),
				'type' => 'text',
				'classes' => 'cols_3_first title_top desc_1',
			),
			'header_socials_custom_url' => array(
				'title' => __( 'Custom Item URL', 'us' ),
				'type' => 'text',
				'classes' => 'cols_3_middle title_top',
			),
			'wrapper_socials_end' => array(
				'type' => 'wrapper_end',
			),
			'header_language_show' => array(
				'type' => 'switch',
				'text' => __( 'Show <strong>Language Widget</strong> in the Header', 'us' ),
				'std' => 0,
				'show_if' => array( 'header_layout', 'not in', array( 'standard', 'centered' ) ),
				'classes' => 'title_top',
			),
			'wrapper_lang_start' => array(
				'type' => 'wrapper_start',
				'show_if' => array(
					array( 'header_layout', 'not in', array( 'standard', 'centered' ) ),
					'and',
					array( 'header_language_show', '=', TRUE ),
				),
			),
			'header_language_source' => array(
				'title' => __( 'Languages Source', 'us' ),
				'type' => 'select',
				'options' => array(
					'own' => __( 'My own links', 'us' ),
					'wpml' => __( 'WPML switcher', 'us' ),
				),
				'std' => 'own',
			),
			'header_link_title' => array(
				'title' => __( 'Links Title', 'us' ),
				'description' => __( 'This text will be shown as the first active item of the dropdown menu.', 'us' ),
				'type' => 'text',
				'show_if' => array( 'header_language_source', '=', 'own' ),
			),
			'header_link_qty' => array(
				'title' => __( 'Links Quantity', 'us' ),
				'type' => 'radio',
				'options' => array(
					'1' => '1',
					'2' => '2',
					'3' => '3',
					'4' => '4',
					'5' => '5',
					'6' => '6',
					'7' => '7',
					'8' => '8',
					'9' => '9',
				),
				'std' => '2',
				'show_if' => array( 'header_language_source', '=', 'own' ),
			),
			'header_link_1_label' => array(
				'title' => __( 'Link 1', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array( 'header_language_source', '=', 'own' ),
			),
			'header_link_1_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array( 'header_language_source', '=', 'own' ),
			),
			'header_link_2_label' => array(
				'title' => __( 'Link 2', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 1 ),
				),
			),
			'header_link_2_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 1 ),
				),
			),
			'header_link_3_label' => array(
				'title' => __( 'Link 3', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 2 ),
				),
			),
			'header_link_3_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 2 ),
				),
			),
			'header_link_4_label' => array(
				'title' => __( 'Link 4', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 3 ),
				),
			),
			'header_link_4_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 3 ),
				),
			),
			'header_link_5_label' => array(
				'title' => __( 'Link 5', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 4 ),
				),
			),
			'header_link_5_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 4 ),
				),
			),
			'header_link_6_label' => array(
				'title' => __( 'Link 6', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 5 ),
				),
			),
			'header_link_6_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 5 ),
				),
			),
			'header_link_7_label' => array(
				'title' => __( 'Link 7', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 6 ),
				),
			),
			'header_link_7_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 6 ),
				),
			),
			'header_link_8_label' => array(
				'title' => __( 'Link 8', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 7 ),
				),
			),
			'header_link_8_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 7 ),
				),
			),
			'header_link_9_label' => array(
				'title' => __( 'Link 9', 'us' ),
				'placeholder' => __( 'Link Label', 'us' ),
				'type' => 'text',
				'std' => '',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 8 ),
				),
			),
			'header_link_9_url' => array(
				'placeholder' => __( 'Link URL', 'us' ),
				'std' => '',
				'type' => 'text',
				'show_if' => array(
					array( 'header_language_source', '=', 'own' ),
					'and',
					array( 'header_link_qty', '>', 8 ),
				),
			),
			'wrapper_lang_end' => array(
				'type' => 'wrapper_end',
			),
		),
	),
	'menuoptions' => array(
		'title' => __( 'Menu Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/menu.png',
		'fields' => array(
			'menu_indents' => array(
				'title' => __( 'Menu Items Indents', 'us' ),
				'description' => __( 'This option sets the distance between the neighboring menu items.', 'us' ),
				'type' => 'slider',
				'min' => 20,
				'max' => 100,
				'step' => 2,
				'std' => 40,
				'postfix' => 'px',
			),
			'menu_dropdown_effect' => array(
				'title' => __( 'Menu Dropdown Effect', 'us' ),
				'type' => 'select',
				'options' => array(
					'opacity' => __( 'FadeIn', 'us' ),
					'height' => __( 'FadeIn + SlideDown', 'us' ),
				),
				'std' => 'height',
			),
			'menu_mobile_width' => array(
				'title' => __( 'Mobile Menu at width', 'us' ),
				'description' => __( 'When screen width is less than this value, main menu transforms to mobile-friendly layout.', 'us' ),
				'type' => 'slider',
				'min' => 300,
				'max' => 2000,
				'std' => 900,
				'postfix' => 'px',
			),
			'menu_togglable_type' => array(
				'title' => __( 'Mobile Menu Behaviour', 'us' ),
				'description' => __( 'When this options is disabled, sub items of mobile menu will open by click at arrows only.', 'us' ),
				'type' => 'switch',
				'text' => __( 'Open sub items by click at menu titles', 'us' ),
				'std' => 1,
			),
		),
	),
	'titlebaroptions' => array(
		'title' => __( 'Title Bar Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/titlebar.png',
		'fields' => array(
			'titlebar_content' => array(
				'title' => __( 'Title Bar Content', 'us' ),
				'description' => __( 'This option is applied to all regular pages, Portfolio Item pages, Archive pages and Search Results page.', 'us' ),
				'type' => 'select',
				'options' => array(
					'all' => __( 'Captions and Breadcrumbs / Arrows', 'us' ),
					'caption' => __( 'Captions Only', 'us' ),
					'hide' => __( 'Hide Title Bar', 'us' ),
				),
				'std' => 'all',
			),
			'titlebar_size' => array(
				'title' => __( 'Title Bar Size', 'us' ),
				'description' => __( 'This option is applied to all site pages', 'us' ),
				'type' => 'select',
				'options' => array(
					'small' => __( 'Ultra Compact', 'us' ),
					'medium' => __( 'Compact', 'us' ),
					'large' => __( 'Large', 'us' ),
					'huge' => __( 'Huge', 'us' ),
				),
				'std' => 'large',
			),
			'titlebar_color' => array(
				'title' => __( 'Title Bar Color Style', 'us' ),
				'description' => __( 'This option is applied to all site pages', 'us' ),
				'type' => 'select',
				'options' => array(
					'default' => __( 'Content colors', 'us' ),
					'alternate' => __( 'Alternate Content colors', 'us' ),
					'primary' => __( 'Primary bg & White text', 'us' ),
					'secondary' => __( 'Secondary bg & White text', 'us' ),
				),
				'std' => 'alternate',
			),
			'titlebar_info' => array(
				'description' => __( '<strong>Title Bar options</strong> can be set for a separate certain page when editing it. If the options above has no effect for some page, check its Title Bar Options.', 'us' ),
				'type' => 'message',
				'classes' => 'color_blue title_top',
			),
		),
	),
	'footeroptions' => array(
		'title' => __( 'Footer Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/footer.png',
		'fields' => array(
			'footer_layout' => array(
				'title' => __( 'Footer Layout', 'us' ),
				'type' => 'select',
				'options' => array(
					'compact' => __( 'Compact', 'us' ),
					'modern' => __( 'Modern', 'us' ),
				),
				'std' => 'compact',
			),
			'footer_show_top' => array(
				'title' => __( 'Top Footer area', 'us' ),
				'type' => 'switch',
				'text' => __( 'Show widgets area', 'us' ),
				'std' => 0,
			),
			'footer_columns' => array(
				'title' => __( 'Columns', 'us' ),
				'description' => sprintf( __( 'Set number of columns in the top Footer area. You can populate these columns with <a target="_blank" href="%s">widgets</a>.', 'us' ), admin_url() . 'widgets.php' ),
				'type' => 'radio',
				'show_if' => array( 'footer_show_top', '=', TRUE ),
				'options' => array(
					'1' => '1',
					'2' => '2',
					'3' => '3',
					'4' => '4',
				),
				'std' => 3,
				'classes' => 'desc_1',
			),
			'footer_show_bottom' => array(
				'title' => __( 'Bottom Footer area', 'us' ),
				'type' => 'switch',
				'text' => __( 'Show copyright and menu area', 'us' ),
				'std' => 1,
			),
			'footer_copyright' => array(
				'title' => __( 'Copyright Text', 'us' ),
				'type' => 'text',
				'std' => 'Any text goes here',
				'show_if' => array( 'footer_show_bottom', '=', TRUE ),
			),
		),
	),
	'typography' => array(
		'title' => __( 'Typography', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/font.png',
		'fields' => array(
			'headings_options' => array(
				'title' => __( 'Headings', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'heading_font_family' => array(
				'type' => 'font',
				'preview' => array(
					'text' => __( 'Heading Font Preview', 'us' ),
					'size' => '30px',
				),
				'std' => 'Roboto|400,700',
			),
			'headings_desktop_sizes' => array(
				'title' => __( 'Sizes on Desktops', 'us' ),
				'type' => 'heading',
				'classes' => 'cols_2_first for_font',
			),
			'headings_mobile_sizes' => array(
				'title' => __( 'Sizes on Mobiles', 'us' ),
				'type' => 'heading',
				'classes' => 'cols_2_last for_font',
			),
			'h1_fontsize' => array(
				'description' => __( '<strong>Heading 1</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '40',
				'classes' => 'cols_2_first for_font',
			),
			'h1_fontsize_mobile' => array(
				'description' => __( '<strong>Heading 1</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '30',
				'classes' => 'cols_2_last for_font',
			),
			'h2_fontsize' => array(
				'description' => __( '<strong>Heading 2</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '34',
				'classes' => 'cols_2_first for_font',
			),
			'h2_fontsize_mobile' => array(
				'description' => __( '<strong>Heading 2</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '26',
				'classes' => 'cols_2_last for_font',
			),
			'h3_fontsize' => array(
				'description' => __( '<strong>Heading 3</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '28',
				'classes' => 'cols_2_first for_font',
			),
			'h3_fontsize_mobile' => array(
				'description' => __( '<strong>Heading 3</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '22',
				'classes' => 'cols_2_last for_font',
			),
			'h4_fontsize' => array(
				'description' => __( '<strong>Heading 4</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '24',
				'classes' => 'cols_2_first for_font',
			),
			'h4_fontsize_mobile' => array(
				'description' => __( '<strong>Heading 4</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '20',
				'classes' => 'cols_2_last for_font',
			),
			'h5_fontsize' => array(
				'description' => __( '<strong>Heading 5</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '20',
				'classes' => 'cols_2_first for_font',
			),
			'h5_fontsize_mobile' => array(
				'description' => __( '<strong>Heading 5</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '18',
				'classes' => 'cols_2_last for_font',
			),
			'h6_fontsize' => array(
				'description' => __( '<strong>Heading 6</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '18',
				'classes' => 'cols_2_first for_font',
			),
			'h6_fontsize_mobile' => array(
				'description' => __( '<strong>Heading 6</strong> font size', 'us' ),
				'type' => 'text',
				'std' => '16',
				'classes' => 'cols_2_last for_font',
			),
			'body_font_options' => array(
				'title' => __( 'Regular Text', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'body_font_family' => array(
				'type' => 'font',
				'preview' => array(
					'text' => __( 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec condimentum tellus purus condimentum pulvinar. Duis cursus bibendum dui, eget iaculis urna pharetra. Aenean semper nec ipsum vitae mollis.', 'us' ),
					'size' => '15px',
				),
				'std' => 'Roboto|400,700',
			),
			'body_font_desktop_sizes' => array(
				'title' => __( 'Sizes on Desktops', 'us' ),
				'type' => 'heading',
				'classes' => 'cols_2_first for_font',
			),
			'body_font_mobile_sizes' => array(
				'title' => __( 'Sizes on Mobiles', 'us' ),
				'type' => 'heading',
				'classes' => 'cols_2_last for_font',
			),
			'body_fontsize' => array(
				'description' => __( 'Font size', 'us' ),
				'type' => 'text',
				'std' => '14',
				'classes' => 'cols_2_first for_font',
			),
			'body_fontsize_mobile' => array(
				'description' => __( 'Font size', 'us' ),
				'type' => 'text',
				'std' => '13',
				'classes' => 'cols_2_last for_font',
			),
			'body_lineheight' => array(
				'description' => __( 'Line height', 'us' ),
				'type' => 'text',
				'std' => '24',
				'classes' => 'cols_2_first for_font',
			),
			'body_lineheight_mobile' => array(
				'description' => __( 'Line height', 'us' ),
				'type' => 'text',
				'std' => '23',
				'classes' => 'cols_2_last for_font',
			),
			'menu_font_options' => array(
				'title' => __( 'Main Menu Text', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'menu_font_family' => array(
				'type' => 'font',
				'preview' => array(
					'text' => __( 'Home About Services Portfolio Contacts', 'us' ),
					'size' => '16px',
				),
				'std' => 'Roboto|400,700',
			),
			'menu_font_desktop_sizes' => array(
				'title' => __( 'Sizes for Default Menu', 'us' ),
				'type' => 'heading',
				'classes' => 'cols_2_first for_font',
			),
			'menu_font_mobile_sizes' => array(
				'title' => __( 'Sizes for Mobile Menu', 'us' ),
				'type' => 'heading',
				'classes' => 'cols_2_last for_font',
			),
			'menu_fontsize' => array(
				'description' => __( 'Font size of <strong>main</strong> items', 'us' ),
				'type' => 'text',
				'std' => '16',
				'classes' => 'cols_2_first for_font',
			),
			'menu_fontsize_mobile' => array(
				'description' => __( 'Font size of <strong>main</strong> items', 'us' ),
				'type' => 'text',
				'std' => '16',
				'classes' => 'cols_2_last for_font',
			),
			'menu_sub_fontsize' => array(
				'description' => __( 'Font size of <strong>sub</strong> items', 'us' ),
				'type' => 'text',
				'std' => '15',
				'classes' => 'cols_2_first for_font',
			),
			'menu_sub_fontsize_mobile' => array(
				'description' => __( 'Font size of <strong>sub</strong> items', 'us' ),
				'type' => 'text',
				'std' => '15',
				'classes' => 'cols_2_last for_font',
			),
			'subset_option' => array(
				'title' => __( 'Subset', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'font_subset' => array(
				'description' => __( 'Select characters subset for Google fonts. <strong>Please note: some fonts does not support particular subsets!</strong>', 'us' ),
				'type' => 'select',
				'options' => array(
					'latin' => 'latin',
					'latin-ext' => 'latin-ext',
					'cyrillic' => 'cyrillic',
					'cyrillic-ext' => 'cyrillic-ext',
					'greek' => 'greek',
					'greek-ext' => 'greek-ext',
					'vietnamese' => 'vietnamese',
					'khmer' => 'khmer',
				),
				'std' => 'latin',
				'classes' => 'title_top desc_1',
			),
		),
	),
	'portfoliooptions' => array(
		'title' => __( 'Portfolio Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/portfolio.png',
		'fields' => array(
			'portfolio_sidebar' => array(
				'title' => __( 'Sidebar at Portfolio Items', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'none',
			),
			'portfolio_comments' => array(
				'title' => __( 'Portfolio Comments', 'us' ),
				'type' => 'switch',
				'text' => __( 'Enable comments for Portfolio Item pages', 'us' ),
				'std' => 0,
			),
			'portfolio_sided_nav' => array(
				'title' => __( 'Sided Navigation', 'us' ),
				'type' => 'switch',
				'text' => __( 'Show previous/next portfolio items on sides of the screen', 'us' ),
				'std' => 1,
			),
			'portfolio_prevnext_category' => array(
				'title' => __( 'Navigation Within a Category', 'us' ),
				'type' => 'switch',
				'text' => __( 'Enable previous/next portfolio item navigation within a category', 'us' ),
				'std' => 0,
			),
			'portfolio_slug' => array(
				'title' => __( 'Portfolio Slug', 'us' ),
				'type' => 'text',
				'std' => 'portfolio',
			),
			'portfolio_category_slug' => array(
				'title' => __( 'Portfolio Category Slug', 'us' ),
				'type' => 'text',
				'std' => 'portfolio_category',
			),
		),
	),
	'blogoptions' => array(
		'title' => __( 'Blog Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/blog.png',
		'fields' => array(
			'blog_options_post_pages' => array(
				'title' => __( 'Single Post Pages', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'post_sidebar' => array(
				'title' => __( 'Sidebar Position', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'right',
			),
			'post_preview_layout' => array(
				'title' => __( 'Post Preview Layout', 'us' ),
				'description' => __( 'This option sets Featured Image Layout for all post pages. You can set it for a separate certain post when editing it.', 'us' ),
				'type' => 'select',
				'options' => array(
					'basic' => __( 'Standard', 'us' ),
					'modern' => __( 'Modern', 'us' ),
					'none' => __( 'No Preview', 'us' ),
				),
				'std' => 'basic',
			),
			'post_meta' => array(
				'title' => __( 'Post Elements', 'us' ),
				'type' => 'checkboxes',
				'options' => array(
					'date' => __( 'Date', 'us' ),
					'author' => __( 'Author', 'us' ),
					'categories' => __( 'Categories', 'us' ),
					'comments' => __( 'Comments number', 'us' ),
					'tags' => __( 'Tags', 'us' ),
				),
				'std' => array( 'date', 'author', 'categories', 'comments', 'tags' ),
			),
			'post_sharing' => array(
				'title' => __( 'Sharing Buttons', 'us' ),
				'type' => 'switch',
				'text' => __( 'Show block with sharing buttons', 'us' ),
				'std' => 0,
			),
			'post_sharing_type' => array(
				'title' => __( 'Buttons Type', 'us' ),
				'type' => 'select',
				'options' => array(
					'simple' => __( 'Simple', 'us' ),
					'solid' => __( 'Solid', 'us' ),
					'outlined' => __( 'Outlined', 'us' ),
				),
				'std' => 'simple',
				'show_if' => array( 'post_sharing', '=', TRUE ),
			),
			'post_sharing_providers' => array(
				'title' => '',
				'type' => 'checkboxes',
				'options' => array(
					'facebook' => 'Facebook',
					'twitter' => 'Twitter',
					'gplus' => 'Google+',
					'linkedin' => 'LinkedIn',
					'pinterest' => 'Pinterest',
				),
				'std' => array( 'facebook', 'twitter', 'gplus', 'linkedin', 'pinterest' ),
				'show_if' => array( 'post_sharing', '=', TRUE ),
			),
			'post_author_box' => array(
				'title' => __( 'Author Box', 'us' ),
				'type' => 'switch',
				'text' => __( 'Show box with information about post author', 'us' ),
				'std' => 0,
			),
			'post_nav' => array(
				'title' => __( 'Prev/Next Navigation', 'us' ),
				'type' => 'switch',
				'text' => __( 'Show links to previous/next posts', 'us' ),
				'std' => 0,
			),
			'post_related' => array(
				'title' => __( 'Related Posts', 'us' ),
				'type' => 'switch',
				'text' => __( 'Show list of posts with same tags at every post page', 'us' ),
				'std' => 1,
			),
			'post_related_layout' => array(
				'title' => __( 'Related Posts Layout', 'us' ),
				'type' => 'select',
				'show_if' => array( 'post_related', '=', TRUE ),
				'options' => array(
					'compact' => __( 'Compact (without preview)', 'us' ),
					'related' => __( 'Standard (3 columns with preview)', 'us' ),
				),
				'std' => 'compact',
			),
			'blog_options_front_page' => array(
				'title' => __( 'Blog Home Page', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'blog_sidebar' => array(
				'title' => __( 'Sidebar Position', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'right',
			),
			'blog_layout' => array(
				'title' => __( 'Page Layout', 'us' ),
				'type' => 'select',
				'options' => array(
					'large' => __( 'Large Image', 'us' ),
					'smallcircle' => __( 'Small Circle Image', 'us' ),
					'smallsquare' => __( 'Small Square Image', 'us' ),
					'grid' => __( 'Regular Grid', 'us' ),
					'masonry' => __( 'Masonry Grid', 'us' ),
					'compact' => __( 'Compact', 'us' ),
				),
				'std' => 'large',
			),
			'blog_content_type' => array(
				'title' => __( 'Posts Content', 'us' ),
				'type' => 'radio',
				'options' => array(
					'excerpt' => __( 'Excerpt', 'us' ),
					'content' => __( 'Full Content', 'us' ),
					'none' => __( 'None', 'us' ),
				),
				'std' => 'excerpt',
			),
			'blog_pagination' => array(
				'title' => __( 'Pagination', 'us' ),
				'type' => 'radio',
				'options' => array(
					'regular' => __( 'Regular Pagination', 'us' ),
					'ajax' => __( 'Ajax Pagination (Load More Button)', 'us' ),
				),
				'std' => 'regular',
			),
			'blog_meta' => array(
				'title' => __( 'Posts Elements', 'us' ),
				'type' => 'checkboxes',
				'options' => array(
					'date' => __( 'Date', 'us' ),
					'author' => __( 'Author', 'us' ),
					'categories' => __( 'Categories', 'us' ),
					'comments' => __( 'Comments number', 'us' ),
					'tags' => __( 'Tags', 'us' ),
					'read_more' => __( 'Read More button', 'us' ),
				),
				'std' => array( 'date', 'author', 'categories', 'comments', 'tags', 'read_more' ),
			),
			'blog_options_archive' => array(
				'title' => __( 'Archive Pages', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'archive_sidebar' => array(
				'title' => __( 'Sidebar Position', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'right',
			),
			'archive_layout' => array(
				'title' => __( 'Page Layout', 'us' ),
				'type' => 'select',
				'options' => array(
					'large' => __( 'Large Image', 'us' ),
					'smallcircle' => __( 'Small Circle Image', 'us' ),
					'smallsquare' => __( 'Small Square Image', 'us' ),
					'grid' => __( 'Regular Grid', 'us' ),
					'masonry' => __( 'Masonry Grid', 'us' ),
					'compact' => __( 'Compact', 'us' ),
				),
				'std' => 'smallcircle',
			),
			'archive_content_type' => array(
				'title' => __( 'Posts Content', 'us' ),
				'type' => 'radio',
				'options' => array(
					'excerpt' => __( 'Excerpt', 'us' ),
					'content' => __( 'Full Content', 'us' ),
					'none' => __( 'None', 'us' ),
				),
				'std' => 'excerpt',
			),
			'archive_pagination' => array(
				'title' => __( 'Pagination', 'us' ),
				'type' => 'radio',
				'options' => array(
					'regular' => __( 'Regular Pagination', 'us' ),
					'ajax' => __( 'Ajax Pagination (Load More Button)', 'us' ),
				),
				'std' => 'regular',
			),
			'archive_meta' => array(
				'title' => __( 'Posts Elements', 'us' ),
				'type' => 'checkboxes',
				'options' => array(
					'date' => __( 'Date', 'us' ),
					'author' => __( 'Author', 'us' ),
					'categories' => __( 'Categories', 'us' ),
					'comments' => __( 'Comments number', 'us' ),
					'tags' => __( 'Tags', 'us' ),
					'read_more' => __( 'Read More button', 'us' ),
				),
				'std' => array( 'date', 'author', 'categories', 'comments', 'tags', 'read_more' ),
			),
			'blog_options_search_results' => array(
				'title' => __( 'Search Results Page', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'search_sidebar' => array(
				'title' => __( 'Sidebar Position', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'right',
			),
			'search_layout' => array(
				'title' => __( 'Page Layout', 'us' ),
				'type' => 'select',
				'options' => array(
					'large' => __( 'Large Image', 'us' ),
					'smallcircle' => __( 'Small Circle Image', 'us' ),
					'smallsquare' => __( 'Small Square Image', 'us' ),
					'grid' => __( 'Regular Grid', 'us' ),
					'masonry' => __( 'Masonry Grid', 'us' ),
					'compact' => __( 'Compact', 'us' ),
				),
				'std' => 'compact',
			),
			'search_content_type' => array(
				'title' => __( 'Posts Content', 'us' ),
				'type' => 'radio',
				'options' => array(
					'excerpt' => __( 'Excerpt', 'us' ),
					'content' => __( 'Full Content', 'us' ),
					'none' => __( 'None', 'us' ),
				),
				'std' => 'excerpt',
			),
			'search_pagination' => array(
				'title' => __( 'Pagination', 'us' ),
				'type' => 'radio',
				'options' => array(
					'regular' => __( 'Regular Pagination', 'us' ),
					'ajax' => __( 'Ajax Pagination (Load More Button)', 'us' ),
				),
				'std' => 'regular',
			),
			'search_meta' => array(
				'title' => __( 'Posts Elements', 'us' ),
				'type' => 'checkboxes',
				'options' => array(
					'date' => __( 'Date', 'us' ),
					'author' => __( 'Author', 'us' ),
					'categories' => __( 'Categories', 'us' ),
					'comments' => __( 'Comments number', 'us' ),
					'tags' => __( 'Tags', 'us' ),
					'read_more' => __( 'Read More button', 'us' ),
				),
				'std' => array( 'date', 'author', 'categories', 'comments', 'tags', 'read_more' ),
			),
			'blog_options_excerpt' => array(
				'title' => __( 'Excerpt', 'us' ),
				'type' => 'heading',
				'classes' => 'align_center with_separator',
			),
			'excerpt_length' => array(
				'title' => __( 'Excerpt Length', 'us' ),
				'description' => __( 'This option sets amount of words in the Excerpt. To show all the words, leave this field blank.', 'us' ),
				'type' => 'text',
				'std' => '55',
			),
		),
	),
	'woocommerce' => array(
		'title' => __( 'WooCommerce', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/cart.png',
		'place_if' => class_exists( 'woocommerce' ),
		'fields' => array(
			'shop_titlebar_content' => array(
				'title' => __( 'Title Bar Content', 'us' ),
				'description' => __( 'This option is applied to all Shop pages and Product pages', 'us' ),
				'std' => 'hide',
				'type' => 'select',
				'options' => array(
					'all' => __( 'Captions and Breadcrumbs', 'us' ),
					'caption' => __( 'Captions Only', 'us' ),
					'hide' => __( 'Hide Title Bar', 'us' ),
				),
			),
			'shop_titlebar_info' => array(
				'description' => __( '<strong>Title Bar Content</strong> can be set for a separate certain product when editing it. If the option above has no effect for some product page, check its Title Bar Options.', 'us' ),
				'type' => 'message',
				'classes' => 'color_blue for_above',
			),
			'shop_sidebar' => array(
				'title' => __( 'Shop Sidebar', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'right',
			),
			'product_sidebar' => array(
				'title' => __( 'Product Sidebar', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'right',
			),
			'shop_columns' => array(
				'title' => __( 'Products Grid Columns', 'us' ),
				'description' => __( 'This option sets products amount per row for Shop pages', 'us' ),
				'std' => '3',
				'type' => 'radio',
				'options' => array(
					'2' => sprintf( _n( '%d column', '%d columns', 2, 'us' ), 2 ),
					'3' => sprintf( _n( '%d column', '%d columns', 3, 'us' ), 3 ),
					'4' => sprintf( _n( '%d column', '%d columns', 4, 'us' ), 4 ),
					'5' => sprintf( _n( '%d column', '%d columns', 5, 'us' ), 5 ),
				),
			),
			'product_related_qty' => array(
				'title' => __( 'Related Products Quantity', 'us' ),
				'description' => __( 'This option sets Related Products quantity for Product pages and Cart page', 'us' ),
				'std' => '3',
				'type' => 'radio',
				'options' => array(
					'2' => __( '2 items', 'us' ),
					'3' => __( '3 items', 'us' ),
					'4' => __( '4 items', 'us' ),
					'5' => __( '5 items', 'us' ),
				),
			),
		),
	),
	'bbpress' => array(
		'title' => 'bbPress',
		'icon' => $us_template_directory_uri . '/framework/admin/img/comments.png',
		'place_if' => class_exists( 'bbPress' ),
		'fields' => array(
			'forum_sidebar' => array(
				'title' => __( 'Forum Sidebar', 'us' ),
				'type' => 'radio',
				'options' => array(
					'left' => __( 'Left', 'us' ),
					'none' => __( 'No Sidebar', 'us' ),
					'right' => __( 'Right', 'us' ),
				),
				'std' => 'right',
			),
		),
	),
	'themeupdate' => array(
		'title' => __( 'Theme Update', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/update.png',
		'fields' => array(
			'themeforest_info' => array(
				'description' => __( 'Please enter your Themeforest username and Secret API Key below if you want to get update notifications for the theme.', 'us' ),
				'type' => 'message',
				'classes' => 'color_blue title_top',
			),
			'themeforest_username' => array(
				'title' => __( 'ThemeForest User Name', 'us' ),
				'description' => '',
				'std' => '',
				'type' => 'text',
			),
			'themeforest_api_key' => array(
				'title' => __( 'ThemeForest API Key', 'us' ),
				'description' => sprintf( __( 'Copy API Key of your ThemeForest account here. Check this <a target="_blank" href="%s">screenshot</a> for more info', 'us' ), $us_template_directory_uri . '/framework/admin/img/find-api.png' ),
				'std' => '',
				'type' => 'text',
				'classes' => 'desc_1',
			),
		),
	),
	'manageoptions' => array(
		'title' => __( 'Manage Options', 'us' ),
		'icon' => $us_template_directory_uri . '/framework/admin/img/backups.png',
		'fields' => array(
			'of_backup' => array(
				'title' => __( 'Backup Theme Options', 'us' ),
				'std' => '',
				'type' => 'backup',
			),
			'of_transfer' => array(
				'title' => __( 'Transfer Theme Options', 'us' ),
				'std' => '',
				'type' => 'transfer',
				'description' => __( 'You can transfer the saved options data between different installations by copying the text inside the text box. To import data from another installation, replace the data in the text box with the one from another installation and click "Import Options".', 'us' ),
			),
		),
	),
);
